/* Generated By:JavaCC: Do not edit this line. ScriptParserConstants.java */
package net.nowina.cadmelia.script.parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ScriptParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int MODULE = 6;
  /** RegularExpression Id. */
  int FUNCTION = 7;
  /** RegularExpression Id. */
  int BOOLEAN = 8;
  /** RegularExpression Id. */
  int FOR = 9;
  /** RegularExpression Id. */
  int IF = 10;
  /** RegularExpression Id. */
  int THEN = 11;
  /** RegularExpression Id. */
  int ELSE = 12;
  /** RegularExpression Id. */
  int BOOLEAN_EQUAL = 13;
  /** RegularExpression Id. */
  int BOOLEAN_NOT_EQUAL = 14;
  /** RegularExpression Id. */
  int BOOLEAN_NOT = 15;
  /** RegularExpression Id. */
  int USE = 16;
  /** RegularExpression Id. */
  int GT = 17;
  /** RegularExpression Id. */
  int LT = 18;
  /** RegularExpression Id. */
  int GTE = 19;
  /** RegularExpression Id. */
  int LTE = 20;
  /** RegularExpression Id. */
  int COLON = 21;
  /** RegularExpression Id. */
  int HASH = 22;
  /** RegularExpression Id. */
  int PERCENT = 23;
  /** RegularExpression Id. */
  int LP = 24;
  /** RegularExpression Id. */
  int RP = 25;
  /** RegularExpression Id. */
  int LB = 26;
  /** RegularExpression Id. */
  int RB = 27;
  /** RegularExpression Id. */
  int QUESTION = 28;
  /** RegularExpression Id. */
  int LBRACE = 29;
  /** RegularExpression Id. */
  int RBRACE = 30;
  /** RegularExpression Id. */
  int EQ = 31;
  /** RegularExpression Id. */
  int SEMICOLON = 32;
  /** RegularExpression Id. */
  int COMMA = 33;
  /** RegularExpression Id. */
  int SP = 34;
  /** RegularExpression Id. */
  int PLUS = 35;
  /** RegularExpression Id. */
  int MINUS = 36;
  /** RegularExpression Id. */
  int DIVIDE = 37;
  /** RegularExpression Id. */
  int TIMES = 38;
  /** RegularExpression Id. */
  int QUOTE = 39;
  /** RegularExpression Id. */
  int NUMBER = 40;
  /** RegularExpression Id. */
  int FILENAME = 41;
  /** RegularExpression Id. */
  int NAME = 42;
  /** RegularExpression Id. */
  int ENDQUOTE = 44;
  /** RegularExpression Id. */
  int CHAR = 45;
  /** RegularExpression Id. */
  int CNTRL_ESC = 46;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int ML_COMMENT_STATE = 1;
  /** Lexical state. */
  int STRING_STATE = 2;
  /** Lexical state. */
  int ESC_STATE = 3;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "<token of kind 1>",
    "<token of kind 2>",
    "\"/*\"",
    "\"*/\"",
    "<token of kind 5>",
    "\"module\"",
    "\"function\"",
    "<BOOLEAN>",
    "\"for\"",
    "\"if\"",
    "\"then\"",
    "\"else\"",
    "\"==\"",
    "\"!=\"",
    "\"!\"",
    "\"use\"",
    "\">\"",
    "\"<\"",
    "\">=\"",
    "\"<=\"",
    "\":\"",
    "\"#\"",
    "\"%\"",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\"]\"",
    "\"?\"",
    "\"{\"",
    "\"}\"",
    "\"=\"",
    "\";\"",
    "\",\"",
    "<SP>",
    "\"+\"",
    "\"-\"",
    "\"/\"",
    "\"*\"",
    "\"\\\"\"",
    "<NUMBER>",
    "<FILENAME>",
    "<NAME>",
    "\"\\\\\"",
    "<ENDQUOTE>",
    "<CHAR>",
    "<CNTRL_ESC>",
  };

}
